/*
Como añadir calendarios:
1:descargar el archivo y extraerlo.
2:clic derecho en el menu de botones y menus> pallet manager
3: desde ahi añadir nueva categoria/carpeta
4:add for JAR , la ruta es la carpeta jcalendar-1.4\lib
Interfaz de menu alumno >> maxi
 */
package Proyecto.Vistas;

import Entidades.Alumno;
import Proyecto.AccesoADatos.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


public class MenuAlumno extends javax.swing.JInternalFrame {
 Connection con = Conexion.getConexion();
    /**
     * Creates new form MenuAlumno
     */
 
    
 
    public MenuAlumno() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTFDocumento = new javax.swing.JTextField();
        jTFApellido = new javax.swing.JTextField();
        jTFNombre = new javax.swing.JTextField();
        jBEstado = new javax.swing.JRadioButton();
        jBBuscar = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();
        jBNuevo = new javax.swing.JButton();
        jBGuardar = new javax.swing.JButton();
        jDateFechaNac = new com.toedter.calendar.JDateChooser();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Nombre:");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Documento:");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Estado:");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Apellido:");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Fecha de Nacimiento:");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel6.setText("Alumno");

        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jBSalir.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jBSalir.setText("Salir");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        jBEliminar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jBEliminar.setText("Eliminar");
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });

        jBNuevo.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jBNuevo.setText("Nuevo");
        jBNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNuevoActionPerformed(evt);
            }
        });

        jBGuardar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jBGuardar.setText("Guardar");
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addComponent(jBNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBGuardar)
                        .addGap(12, 12, 12)
                        .addComponent(jBSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBEstado)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6)
                                .addComponent(jTFNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                .addComponent(jTFApellido))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTFDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(jBBuscar))
                            .addComponent(jDateFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel6)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTFDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBuscar))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTFApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTFNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jBEstado))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jDateFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBEliminar)
                    .addComponent(jBNuevo)
                    .addComponent(jBSalir)
                    .addComponent(jBGuardar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBSalirActionPerformed

    private void jBNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNuevoActionPerformed
      //Parte de Mario
        //Parte del documento
        String texto = jTFDocumento.getText();
        int documento = Integer.parseInt(texto);

        //Parte del Apellido
        String apellido = jTFApellido.getText();
       
        //Parte del nombre
        String nombre = jTFNombre.getText();
       
        //parte del valor logico
        boolean activo = jBEstado.isSelected();
       
        //parte de la fecha
        Date fechaNac = jDateFechaNac.getDate();
        if (documento >= -1 && !"".equals(apellido) && !"".equals(nombre)) {
        //insertar valores
        String sqlInsert = "INSERT INTO alumno (dni, apellido, nombre, fechaNacimiento, estado) VALUES (?, ?, ?, ?, ?)";

        try {
            // Iniciamos
            PreparedStatement preparedStatement = con.prepareStatement(sqlInsert);

            // Establecemos los valores a subir
            preparedStatement.setInt(1, documento);
            preparedStatement.setString(2, apellido);
            preparedStatement.setString(3, nombre);
            preparedStatement.setDate(4, new java.sql.Date(fechaNac.getTime()));
            preparedStatement.setBoolean(5, activo);

            // Enviamos
            int filasAfectadas = preparedStatement.executeUpdate();

            if (filasAfectadas > 0) {
                JFrame parent = new JFrame();
                JOptionPane.showMessageDialog(parent, "Inserción exitosa.");
            } else {
                JFrame parent = new JFrame();
                JOptionPane.showMessageDialog(parent, "La inserción no tuvo éxito.");
            }

            // Cerrar la conexión
            preparedStatement.close();
            } catch (SQLException e) {
                JFrame parent = new JFrame();
                String error = e.getMessage();
                JOptionPane.showMessageDialog(parent, "Error al insertar el alumno\n"+error);

            }
        }
    }//GEN-LAST:event_jBNuevoActionPerformed

    
    
    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
           // Parte de Mario
    // Parte del documento
    String texto = jTFDocumento.getText();
    int documento = Integer.parseInt(texto);

    // Parte del Apellido
    String apellido = jTFApellido.getText();

    // Parte del nombre
    String nombre = jTFNombre.getText();

    // Parte del valor lógico
    boolean activo = jBEstado.isSelected();

    // Parte de la fecha
    Date fechaNac = jDateFechaNac.getDate();
    
    // Identificador único del alumno
    int idAlumno = obtenerIdAlumno(documento);
    System.out.println(idAlumno);
    if (documento >= -1 && !"".equals(apellido) && !"".equals(nombre)) {
        // Query de actualización
        String sqlUpdate = "UPDATE alumno SET dni = ?, apellido = ?, nombre = ?, fechaNacimiento = ?, estado = ? WHERE idAlumno = ?";

        try {
            // Iniciamos
            PreparedStatement preparedStatement = con.prepareStatement(sqlUpdate);

            // Establecemos los valores a actualizar
            preparedStatement.setInt(1, documento);
            preparedStatement.setString(2, apellido);
            preparedStatement.setString(3, nombre);
            preparedStatement.setDate(4, new java.sql.Date(fechaNac.getTime()));
            preparedStatement.setBoolean(5, activo);
            preparedStatement.setInt(6, idAlumno);

            // Enviamos
            int filasAfectadas = preparedStatement.executeUpdate();

            if (filasAfectadas > 0) {
                JFrame parent = new JFrame();
                JOptionPane.showMessageDialog(parent, "Actualización exitosa.");
            } else {
                JFrame parent = new JFrame();
                JOptionPane.showMessageDialog(parent, "La actualización no tuvo éxito.");
            }

            // Cerrar la conexión
            preparedStatement.close();
        } catch (SQLException e) {
            JFrame parent = new JFrame();
            String error = e.getMessage();
            JOptionPane.showMessageDialog(parent, "Error al actualizar el alumno\n"+error);
        }
    }
    }//GEN-LAST:event_jBGuardarActionPerformed

    private int obtenerIdAlumno(int documento) {
    // Query para obtener el ID del alumno con el dni apellido y nombre
    String sqlSelect = "SELECT idAlumno FROM alumno WHERE dni = ?";
    int idAlumno = -1; // Valor predeterminado
    
    
    try {
        // Iniciamos
        PreparedStatement preparedStatement = con.prepareStatement(sqlSelect);

        // Establecemos los valores para la consulta
        preparedStatement.setInt(1, documento);


        // Ejecutamos la consulta y obtenemos el resultado
        ResultSet resultSet = preparedStatement.executeQuery();

        if (resultSet.next()) {
            idAlumno = resultSet.getInt("idAlumno");
        }

        // Cerrar la conexión y el resultado
        resultSet.close();
        preparedStatement.close();
        
    } catch (SQLException e) {
        JFrame parent = new JFrame();
        String error = e.getMessage();
        JOptionPane.showMessageDialog(parent, "Error al obtener el ID del alumno\n"+error);
    }

    return idAlumno;
}
    
    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
           // Query para eliminar un alumno por su DNI
    String sqlDelete = "DELETE FROM alumno WHERE dni = ?";
    String dni = jTFDocumento.getText();
    try {
        // Iniciamos
        PreparedStatement preparedStatement = con.prepareStatement(sqlDelete);

        // Establecemos el valor del DNI para la eliminación
        preparedStatement.setString(1, dni);

        // Enviamos
        int filasAfectadas = preparedStatement.executeUpdate();

        if (filasAfectadas > 0) {
            JFrame parent = new JFrame();
            JOptionPane.showMessageDialog(parent, "Eliminación exitosa.");
        } else {
            JFrame parent = new JFrame();
            JOptionPane.showMessageDialog(parent, "No se encontró ningún alumno con ese DNI.");
        }

        // Cerrar la conexión
        preparedStatement.close();
    } catch (SQLException e) {
        JFrame parent = new JFrame();
        String error = e.getMessage();
        JOptionPane.showMessageDialog(parent, "Error al eliminar el alumno\n"+error);
    }
    }//GEN-LAST:event_jBEliminarActionPerformed

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
         // Query para consultar un alumno por su DNI
    String sqlSelect = "SELECT dni, apellido, nombre, fechaNacimiento, estado FROM alumno WHERE dni = ?";
    String dni = jTFDocumento.getText();
    try {
        // Iniciamos
        PreparedStatement preparedStatement = con.prepareStatement(sqlSelect);

        // Establecemos el valor del DNI para la consulta
        preparedStatement.setString(1, dni);

        // Ejecutamos la consulta y obtenemos el resultado
        ResultSet resultSet = preparedStatement.executeQuery();

        if (resultSet.next()) {
            // guardamos lo obtenido en variables
            int documento = resultSet.getInt("dni");
            String apellido = resultSet.getString("apellido");
            String nombre = resultSet.getString("nombre");
            Date fechaNac = resultSet.getDate("fechaNacimiento");
            boolean activo = resultSet.getBoolean("estado");
            
            // usamos los valores

            jTFApellido.setText(apellido);
            jTFNombre.setText(nombre);
            jBEstado.setSelected(activo);
            jDateFechaNac.setDate(fechaNac);
        } else {
            JFrame parent = new JFrame();
            JOptionPane.showMessageDialog(parent, "No se encontró ningún alumno con ese DNI.");
        }

        // Cerrar la conexión y el resultado
        resultSet.close();
        preparedStatement.close();
    } catch (SQLException e) {
        JFrame parent = new JFrame();
        String error = e.getMessage();
        JOptionPane.showMessageDialog(parent, "Error al consultar el alumno\n"+error);
    }
    }//GEN-LAST:event_jBBuscarActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBEliminar;
    private javax.swing.JRadioButton jBEstado;
    private javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBNuevo;
    private javax.swing.JButton jBSalir;
    private com.toedter.calendar.JDateChooser jDateFechaNac;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTFApellido;
    private javax.swing.JTextField jTFDocumento;
    private javax.swing.JTextField jTFNombre;
    // End of variables declaration//GEN-END:variables
}
