/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Proyecto.Vistas;

import Proyecto.AccesoADatos.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Villa
 */
public class MenuConsultaAlumnos extends javax.swing.JInternalFrame {
Connection con = Conexion.getConexion();

private boolean actualizarComboBox = true;
    /**
     * Creates new form MenuConsultaAlumnos
     */
    public MenuConsultaAlumnos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCBMaterias = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAlumnos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setMinimumSize(new java.awt.Dimension(645, 600));
        setPreferredSize(new java.awt.Dimension(645, 600));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Listado de Alumnos por Materia");

        jLabel2.setText("Seleccione una materia");

        jCBMaterias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Click me" }));
        jCBMaterias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBMateriasActionPerformed(evt);
            }
        });

        jTableAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "DNI", "Apellido", "Nombre"
            }
        ));
        jTableAlumnos.setPreferredSize(new java.awt.Dimension(630, 550));
        jScrollPane1.setViewportView(jTableAlumnos);

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(117, 117, 117)
                        .addComponent(jCBMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         getFrame().setVisible(true);
        super.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

     private MenuConsultaAlumnos getFrame(){
    return this;
    }
    
    private void jCBMateriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBMateriasActionPerformed

        if (actualizarComboBox) {
            buscarMaterias();
        }
        if (!actualizarComboBox) {
        mostrarDatosDelAlumno();
         }
    }//GEN-LAST:event_jCBMateriasActionPerformed

    private void buscarMaterias() {
       
    try {

        // Consulta SQL para obtener las materias
        String sql = "SELECT nombre FROM materia";

        PreparedStatement preparedStatement = con.prepareStatement(sql);
        ResultSet resultSet = preparedStatement.executeQuery();
        jCBMaterias.removeAllItems();
        while (resultSet.next()) {
            String nombreMateria = resultSet.getString("nombre");
            jCBMaterias.addItem(nombreMateria); // Agrega cada materia directamente al JComboBox
        }
       actualizarComboBox = false;
    } catch (SQLException ex) {
        Logger.getLogger(MenuConsultaAlumnos.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
     
   private void mostrarDatosDelAlumno() {
    String materiaSeleccionada = (String) jCBMaterias.getSelectedItem();
    
    if (materiaSeleccionada != null) {
        DefaultTableModel model = (DefaultTableModel) jTableAlumnos.getModel();
        model.setRowCount(0); 
        // Limpiamos la tabla antes de agregar nuevos datos
        try {
            // Consulta SQL para obtener la ID de la materia a partir de su nombre
            String sqlObtenerIdMateria = "SELECT idMateria FROM materia WHERE nombre = ?";
            
            PreparedStatement preparedStatementObtenerIdMateria = con.prepareStatement(sqlObtenerIdMateria);
            preparedStatementObtenerIdMateria.setString(1, materiaSeleccionada);
            
            ResultSet resultSetIdMateria = preparedStatementObtenerIdMateria.executeQuery();
            
            if (resultSetIdMateria.next()) {
                int idMateria = resultSetIdMateria.getInt("idMateria");
                
                // Consulta SQL para obtener los datos de los alumnos de la materia seleccionada
                String sql = "SELECT a.idAlumno, a.dni, a.nombre, a.apellido FROM alumno a " +
                             "INNER JOIN inscripcion i ON a.idAlumno = i.idAlumno " +
                             "WHERE i.idMateria = ?";
                
                PreparedStatement preparedStatement = con.prepareStatement(sql);
                preparedStatement.setInt(1, idMateria);
                ResultSet resultSet = preparedStatement.executeQuery();
                while (resultSet.next()) {
                    int idAlumno = resultSet.getInt("idAlumno");
                    String dni = resultSet.getString("DNI");
                    String nombre = resultSet.getString("nombre");
                    String apellido = resultSet.getString("apellido");
                    // Agregar fila a la tabla
                    model.addRow(new Object[] { idAlumno, dni, nombre, apellido });
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MenuConsultaAlumnos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jCBMaterias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAlumnos;
    // End of variables declaration//GEN-END:variables
}
